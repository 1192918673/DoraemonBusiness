apply plugin: 'com.android.application'
apply plugin: 'im.fir.plugin.gradle'
apply from: rootProject.getRootDir().getAbsolutePath() + "/utils.gradle"

def Properties localProps = new Properties()
try {
    localProps.load(new FileInputStream(file('local.properties')))
} catch (Exception e) {
}

fir {
    //必填 上传 fir.im apk 字段，否则无法上传 APP 到 fir.im
//    apiToken FirToken  在运行fir相应的task再指定
    //可选 上传fir.im 中显示的changelog
//    changeLog FirLog   在运行fir相应的task再指定
}

/**
 我们在gradle解析完整个任务之后，找到对应的Task，然后在里边添加一个doFirst Action
 这样能确保编译开始的时候，我们动态设置Fir的参数。
 注意，必须在afterEvaluate里边才能做，否则gradle没有建立完任务有向图，你是找不到
 什么preDebugBuild之类的任务的
 */
project.afterEvaluate {
    //Fir的task已publishApk开头
    tasks.findAll { task ->
        task.name.startsWith("publishApk")
    }.each {
        it.doFirst {
            getFirTokenAndFirLog()
        }
    }
}

ext {
    TestVersion = '1.0.0.24'
    TestVersionCode = 1000024
    Version = '1.0.0'
    VersionCode = 10000
    DevURLDOMAIN = '"http://doraemon.babadeyan.com"'
    BetaURLDOMAIN = '"http://doraemon.babadeyan.com"'
    OnlineURLDOMAIN = '"http://doraemon.babadeyan.com"'

    DevUMengAppKey = "57a9406be0f55a4be60038ba"
    OnlineUMengAppKey = "57a9405267e58e073100057e"
    BLNAME = '"Doraemon"'
    FirToken = "b90c0ceb8e1f7c518951ed9f0c791102"
}

android {
    compileSdkVersion 22
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.geeknewbee.doraemon"
        minSdkVersion 18
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        multiDexEnabled = true
        ndk { abiFilters 'armeabi-v7a' }
        resConfigs "zh"
        buildConfigField "boolean", "NEED_DEBUG", "true"
        buildConfigField "boolean", "HAVE_SPEECH_DEVCE", "true"
        buildConfigField "boolean", "NEED_START_BLE", "true"
        buildConfigField "boolean", "SHOW_ASR_RESULT", "true"
        buildConfigField "String", "BLUETOOTH_NAME", localProps["bluetoothName"] == null ? "Doraemon" : localProps["bluetoothName"]
        println "BLUETOOTH_NAME:" + (localProps["bluetoothName"] == null ? BLNAME : localProps["bluetoothName"])
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', "src-dao"]
        }
    }

    signingConfigs {
        myConfig {
            storeFile file("keystore.jks")      //签名文件
            storePassword "111111"
            keyAlias "doraemon"
            keyPassword "111111"  //签名密码
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.myConfig
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources true // 是否去除无效的资源文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BLUETOOTH_NAME", BLNAME
        }

        debug {
            signingConfig signingConfigs.myConfig
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources true // 是否去除无效的资源文件
        }
    }

    productFlavors {
        //开发版
        Dev {
            versionName TestVersion
            versionCode TestVersionCode
            buildConfigField "String", "URLDOMAIN", DevURLDOMAIN
            manifestPlaceholders = ["UMENG_APPKEY" : DevUMengAppKey,
                                    "UMENG_CHANNEL": "Fir"]
        }
        //测试版
        Beta {
            buildConfigField "boolean", "NEED_DEBUG", "false"
            versionName TestVersion
            versionCode TestVersionCode
            buildConfigField "String", "URLDOMAIN", BetaURLDOMAIN
            manifestPlaceholders = ["UMENG_APPKEY" : OnlineUMengAppKey,
                                    "UMENG_CHANNEL": "Fir"]
        }

        //发布版
        Online {
            buildConfigField "boolean", "NEED_DEBUG", "false"
            buildConfigField "String", "URLDOMAIN", OnlineURLDOMAIN
            manifestPlaceholders = ["UMENG_APPKEY" : OnlineUMengAppKey,
                                    "UMENG_CHANNEL": "Fir"]
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(output.outputFile.parent, "Doraemon_Business" + variant.productFlavors.get(0).name + "_"
                    + variant.buildType.name + "_" + variant.versionName + ".apk")
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0'
    compile project(path: ':doraemonsdk')
    compile project(path: ':YoukuPlayerOpenSDK')
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'com.android.support:multidex:1.0.1'
    compile 'de.greenrobot:greendao:2.0.0'
    compile 'com.facebook.stetho:stetho:1.1.0'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.google.zxing:core:3.2.1'

    compile 'io.reactivex:rxjava:1.0.14'
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'org.apache.commons:commons-lang3:3.4'
}
